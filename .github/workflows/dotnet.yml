name: .NET CI & Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env: 
  DOTNET_VERSION: "9.0.x"
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/homeapp-backend

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Create appsettings.json
      run: |
        echo '{
          "EmailConfiguration": {
            "From": "${{ secrets.EMAIL_FROM }}",
            "SmtpServer": "${{ secrets.SMTP_SERVER }}",
            "Port": "${{ secrets.SMTP_PORT }}",
            "Username": "${{ secrets.SMTP_USERNAME }}",
            "Password": "${{ secrets.SMTP_PASSWORD }}"
          },
          "JwtSettings": {
            "validIssuer": "${{ secrets.JWT_VALID_ISSUER }}",
            "validAudience": "${{ secrets.JWT_VALID_AUDIENCE }}",
            "securityKey": "${{ secrets.JWT_SECURITY_KEY }}",
            "expiryInMinutes": "${{ secrets.JWT_EXPIRY_MINUTES }}"
          },
          "ConnectionStrings": {
            "HomeAppConnection": "${{ secrets.DB_HOMEAPP_CONNECTION }}",
            "HomeAppUserConnection": "${{ secrets.DB_HOMEAPP_USER_CONNECTION }}"
          }
        }' > ./HomeApp.Backend/Web.Api/appsettings.json

    - name: Debug appsettings.json
      run: cat ./HomeApp.Backend/Web.Api/appsettings.json

    - name: Restore dependencies
      run: dotnet restore ./HomeApp.Backend/HomeApp.Backend.sln

    - name: Build
      run: dotnet build ./HomeApp.Backend/HomeApp.Backend.sln --no-restore

    - name: Run All Tests
      run: dotnet test ./HomeApp.Backend/HomeApp.Backend.sln --no-build --verbosity normal

    # Nur bei Push auf main: Docker vorbereiten & pushen
    - name: Extract Docker tags
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      id: docker_tags
      run: |
        SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
        echo "tag_latest=${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
        echo "tag_sha=${{ env.IMAGE_NAME }}:main-${SHORT_SHA}" >> $GITHUB_OUTPUT

    - name: Log in to GitHub Container Registry
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker build -t ${{ steps.docker_tags.outputs.tag_latest }} -t ${{ steps.docker_tags.outputs.tag_sha }} \
          -f ./HomeApp.Backend/Web.Api/Dockerfile ./HomeApp.Backend

    - name: Push Docker images
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        docker push ${{ steps.docker_tags.outputs.tag_latest }}
        docker push ${{ steps.docker_tags.outputs.tag_sha }}
